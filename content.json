[{"title":"git的应用","date":"2020-05-08T07:57:21.000Z","path":"2020/05/08/git的应用/","text":"版本控制工具及搭建环境 git分布式版本控制工具如何推送本地自己代码到github？ 电脑本地安装git，github注册一个账号 生成sshkey，在git-bash输入如下命令：1$ ssh-keygen -t rsa -C 1533470585@qq.com (github注册邮箱) 回车输入存储文件位置和密码，github密码 在github中设置sshkey，打开xx_rsa.pub文件复制密码到github中 配置git用户信息，在git-bash输入如下命令：12git config --global user.name sunnyrainbow1994 (github用户名) git config --global user.email 1533470585@qq.com (github注册邮箱) 在github新建一个仓库并初始化仓库 克隆仓库到本地，git-bash命令： 12$ cd 存放仓库位置 $ git clone github git@github.com:sunnyrainbow1994/test.git (仓库地址) 本地代码文件更新并推送到github仓库，git-bash命令：123$ git add . #添加所有更新的文件 $ git commit -m “add new file,update READMD.MD” #提交更新到缓冲区，“”中为更新摘要 $ git push origin master #推送到源仓库master分支,到github仓库查看是否推送成功。 从别人github下载代码修改再push到自己github:从别人github上Fork到自己github,再下载到本地进行修改后push到自己github,操作如上6、7一样。 github push代码jenkins自动构建项目： jenkins新建项目，选择github项目并输入项目github_url，源码管理选择git并输入项目仓库url和github账号密码认证，构建触发器选择github，输入构建命令。 github项目设置jenkins的webhook，在项目setting里添加webhook选择just push才触发。 github push一个commit测试 并查看github上webhook状态，查看jenkins有没有产生build。 本地搭建tomcat+jenkins+github+ngrok 本地下载tomcat安装包，解压安装包到指定路径，配置好环境变量，启动startup.bat正常运行，打开网页http://localhost:8080 可以看到tomcat画面。本地安装tomcat，打开startup.bat输出乱码改：conf目录下的logging.properties文件改成：consolehandler.encoding=GBK，改端口conf目录下：server.xml文件把所有8080端口改成9090 本地下载最新的jenkins war包，放到tomcat的webapps目录下，浏览器进入，即可进入Jenkins初始化，找到hudson.model.UpdateCenter.xml 文件，将url改成https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json ，重启tomcat，刷新页面，输入密码，安装插件 在官网下载ngrok安装包并解压，在官网auth获取token，打开ngrok.exe，输入命令ngrok token xxxxx(你的token)，输入命令：ngrok http 8080，会有网址http://61256c23.ngrok.io 映射到本地http://localhost:8080 ，或者ngrok http 192.168.136.131:8080映射到虚拟机上的ip。 在github项目添加webhook：http://61256c23.ngrok.io/jenkins/github-webhook/ ,具体操作可查看上文。 jenkins中的远程构建触发：输入认证token，例如123456，浏览器输入网址进行请求：http://localhost:8080/jenkins/job/github_test/build?token=123456 ，查看jenkins有没有触发构建。","comments":true,"categories":[],"tags":[{"name":"版本控制工具、git","slug":"版本控制工具、git","permalink":"https://sunnyrainbow1994.github.io/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%B7%A5%E5%85%B7%E3%80%81git/"}]},{"title":"Hello World","date":"2020-04-08T06:33:06.411Z","path":"2020/04/08/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","comments":true,"categories":[],"tags":[{"name":"test","slug":"test","permalink":"https://sunnyrainbow1994.github.io/tags/test/"}]}]